// Generated by CoffeeScript 1.7.1
(function() {
  var NoticeController, NoticesList,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  NoticeController = (function(_super) {
    __extends(NoticeController, _super);

    NoticeController.prototype.events = {
      "load section#notices": "onLoadSection",
      "click li": "onClick"
    };

    NoticeController.prototype.onClick = function(event) {
      return console.log(event);
    };

    NoticeController.prototype.onLoadSection = function(event) {
      return console.log("Loaded Notices");
    };

    function NoticeController() {
      this.onLoadSection = __bind(this.onLoadSection, this);
      this.onClick = __bind(this.onClick, this);
      NoticeController.__super__.constructor.apply(this, arguments);
      __Model.Notice.bind("create", this.bindNoticeCreate);
    }

    NoticeController.prototype.bindNoticeCreate = function(notice) {
      var view;
      console.log("You've created " + notice.subject + "!");
      view = new __View.NoticeView({
        model: notice
      });
      return view.append(notice);
    };

    return NoticeController;

  })(Monocle.Controller);

  NoticesList = new NoticeController("section#notices");

  Lungo.ready(function() {
    __Model.Notice.create({
      id: "1",
      subject: "Notice 1",
      description: "Notice 1 description",
      date: "15.04.2014"
    });
    return __Model.Notice.create({
      id: "2",
      subject: "Notice 2",
      description: "Notice 2 description",
      date: "16.04.2014"
    });
  });

}).call(this);
